#class {mapper} {open}

#regex {"$world"} {3s} {
	#var {mapfile}{3s.map}
} {
	#var {mapfile}{daagar.map}
}
#map read .tt/map/${mapfile}
#map write .tt/map/${mud}-session-backup.map

#var map[height] 17
#var map[width] 42

#map goto {roomnote} {cot}

/* Move Event */
#alias {mapupdate} {
	#map {get} {ROOMVNUM} {roomvnum};
	#map {get} {ROOMAREA} {roomarea};
	#map {get} {ROOMNAME} {roomname};
	#map {get} {ROOMDESC} {roomdesc};
	#format {roomname_len}	{%L} {$roomname};
	#format {roomvnum_len}	{%L} {$roomvnum};
	#format {roomarea_len}	{%L} {$roomarea};
	#format {roomdesc_len}	{%L} {$roomdesc};
	#math {name_len} {42-$roomvnum_len-3};
	#format {name_trunc} {%.${name_len}s} {$roomname};
	#unvar area_mapped;
	#map list {} {} {} {$roomarea} {variable} {area_mapped};
	#var {room_cnt} {&area_mapped[]};
	#if {"$draw[map]" == "on"} {
		#draw {tile} $map[height]-1 -$map[width] $map[height]-1 -1 {<020>$roomarea <140>(<120>$room_cnt<140>)<099>};
		#draw {tile} $map[height] -$map[width] $map[height] -1 {<140>[<030>$roomvnum<140>] <130>$name_trunc<099>}
	};
}

#event {MAP UPDATED VTMAP} {
	#delay {0.05} {mapupdate}
}

#event {MAP ENTER ROOM} {
	#map get roomvnum roomvnum;
	#system {echo "#map goto $roomvnum" > .tt/map/lastroom.tt};
	#if {"$mapping" == "on"} {
		mapupdate
	}
}

#event {MAP EXIT ROOM} {
	#list nouns clear
}

/* Map Follow on Following Others */
#act {%1 leaves %2\.} {
	#var following %1;
	#var foldir %2;

	#switch {"$foldir"} {
		#case {"north"}	{#var foldir n};
		#case {"south"}	{#var foldir s};
		#case {"east"}	{#var foldir e};
		#case {"west"}	{#var foldir w};
		#case {"down"}	{#var foldir d};
		#case {"up"}	{#var foldir u};
	}
}

#act {%1 leaves following %2} {
	#format {follower} {%l} {%1};
	#if {"$follower" == "$world" && %2 == "$following"} {
		#map move $foldir
	}
} {4}

/* Data Grab Trigger */
#var longcap off
#var finding_here off

#function cartcheck {
	#format cart {%.20s} {%0};
	#if {"$cart" == "                    " ||
	     "$cart" == ""} {
		#return 1
	} {
		#return 0
	}
}

#NOP Kill-Loop to find rooms with critters and no people

#NOP Room Short with Exits
#act {{=S=(.*) \((.*)\)\s*=S=}} {
	#var room %2;
	#var exits %3;
#nop {Fl Stepper without stepper direction};
	#var total_items 0;
	#var player_room 0;
	#var critter_room 0;
        #var upexit 0;
        #var room_dirs %3;
        #replace {room_dirs}{,}{;};
        #var {room_short_desc}{%1};
        #regex {$room_short_desc}{=S=%* (%*)}{
        	#var {room_short_desc}{&1};
        };
        #list {room_dirs}{create}{$room_dirs};
        #list {room_dirs}{find}{u}{upexit};
        #if {$upexit == 0}{
                #list {room_dirs}{find}{exit}{upexit};
        };
        #if {$upexit == 0}{
                #list {room_dirs}{find}{portal}{upexit};
        };
        #if {$upexit == 0}{
                #list {room_dirs}{find}{menu}{upexit};
        };
#nop {  #if {$upexit > 0 && "$area" == "csewers"} };
        #if {"%2" == "Sewer Portal" && "$area" == "Chaotic Sewers"}{
                #map name exit;#map set roomsymbol x;#map set roomcolor <128>;
                #map dig u;
                #map {exit}{u}{command}{#read Dirs/csewers_unload.tt;u;#var findloc 1};
                #if {$findexit == 1}{#var domove 0};
        };
        #list {room_dirs}{find}{$reversedir}{reverse_dir};
        #list {room_dirs}{size}{room_exits};
#nop {End of support for Fl Mapper};
	#if {"$mapping" == "on"} {
		#if {"$finding_here" == "off"} {
		    #replace exits {,} {;};
		    #foreach {$exits} {eachexit} {#map dig $eachexit};
		    #map get {roomexit} {rexit};
		    #foreach {$rexit} {eachexit} {
			    #map at {$eachexit} {
				    #map get {roomarea} {eacharea};
				    #if {"$eacharea" == ""} {
					    #map set {roomcolor} {<g09>}
				    }
			    }
			}
		};
		#if {$roomname_len == 0} {
			#map set roomname {%2 (%3)}
		};
		#if {$roomarea_len == 0} {
			#map set roomarea {$area};
			#map set roomcolor
		};
		#if {$roomdesc_len == 0 || "$finding_here" == "on"} {
			#var longcap on;
			#unvar long;
			#act {%%1} {
				#if {@cartcheck{%%1}} {
						#nop
					} {
						#var long {${long}%%1 }
				}
			} {2}
		};
		#delay 0 mapupdate
	};
        #if {$stepper == 1}{
                #if {${domove} == 1}{
                        #if {$findexit == 1}{
                                kill-loop;
                        }{
                                #if {"$mapping" == "on"}{
                                        #delay {0.15}{kill-loop};
                                }{
                                        #delay {0.05}{kill-loop};
                                };
                        };
                };
        }{
                #if {${domove} == 1}{
			dir_selection;
		};
	};
}

#NOP Room Short with No Exits, Lowered Priority
#act {=S=%1%s=S=} {
	#var room %1;
	#if {"$mapping" == "on"} {
		#if {$roomname_len == 0} {
			#map set roomname {%1}
		};
		#if {$roomarea_len == 0} {
			#map set roomarea {$area};
			#map set roomcolor
		};
		#if {$roomdesc_len == 0 || "$finding_here" == "on"} {
			#var longcap on;
			#unvar long;
			#act {%%1} {
				#if {@cartcheck{%%1}} {
						#nop
					} {
						#var long {${long}%%1 }
				}
			} {2}
		};
		#map get {roomvnum} {gonum};
		#map goto $gonum;
	}
} {6}

#act {=X={.*}} {
	#if {"$longcap" == "on"} {
		#var longcap off;
		#unact {%%1};
		#if {"$finding_here" == "off"} {
			#map set roomdesc {$long}
		}
	}
} {1}

#act {AREA NAME: %1 [%2]} {
	#var area %1
}

#act {AREA RATING -> %1 [%2]} {
	#var area %2
}

/* Aliases */
#NOP count the # of rooms mapped
#alias {area_mapped %1} {
	#unvar area_mapped;
	#map list {} {} {} {%1} {variable} {area_mapped};
	#showme {&area_mapped[] rooms mapped.};
}

#NOP Color rooms that have no area set (unexplored)
#alias nacolor {
	#loop 1 20000 {cnt} {
		#map at {$cnt} {
			#map get {roomarea} {cntarea};
			#if {"$cntarea" == ""} {#map set roomcolor <g09>}
		}
	};
	#map get {roomvnum} {gonum};
	#map goto $gonum;
	#if {"$draw[map]" == "on"} {
		#draw {tile} $map[height]-1 -$map[width] $map[height]-1 -1 {<020>$roomarea <140>(<120>$room_cnt<140>)<099>};
		#draw {tile} $map[height] -$map[width] $map[height] -1 {<140>[<030>$roomvnum<140>] <130>$roomname<099>}
	}
}

#alias {go} {
	#if {"$mapping" == "on"}{
		mapoff;
	};
        #map flag static on;
        #var domove 0;
	#map find {roomnote} {%0%*};
        #map get roomvnum returnroom;
        #var returnpathroom $room_num;
	#path run
}

#alias goback {
        #map run $returnroom;
        #var room_num $returnpathroom;
}

#alias {mapgo} {
	#map goto {roomnote} {%0};
}

#alias {start} {
	#map destroy world;
	#map read .tt/map/${mapfile};
	#map goto {roomnote} {%0};
	#map offset 1 -42 17 -1
}

#alias {findhere} {
	#var finding_here on;
	rating;
	#delay 1 mapon;
	#delay 2 look;
	#delay 3 {
		#var findexits $exits;
		#replace findexits {,} {;};
		#map list {roomarea} {$area} {roomname} {$room%*} {roomexits} {$findexits} {roomdesc} {$long};
		#map list {roomarea} {$area} {roomname} {$room%*} {roomexits} {$findexits} {roomdesc} {$long} {variable} {findroom};
		#if {&findroom[] == 1} {
			#map goto *findroom[1..1]
		};
		#var finding_here off;
		mapoff
	}
}

#alias {mapsearch} {
	#line ignore #show <129>Name matches:<088>;
	#map list {%i%*%0%*};
	#line ignore #show \n;
	#line ignore #show <129>Note matches:<088>;
	#map list {} {} {} {} {%i%*%0%*};
}

#alias {mapname %1} {
	#map set roomname %1;
	#map write .tt/map/${mapfile}
}

#NOP #alias {mmu}{
#NOP 	#map run {%0};
#NOP 	#map set {roomnote} {%0};
#NOP 	#map set {roomname} {%0};
#NOP 	#map write .tt/map/${mapfile};
#NOP };

#alias {mapsave} {
	#map write .tt/map/${mapfile};
	#echo {<128>Saved map to .tt/map/${mud}.map<088>}
}

#alias {mapon} {
	!brief off yes;
	#map flag static off;
	#var mapstatic 1;
	#var area %1;
	#var mapping on;
#nop {Biome Work in progress
	#if {"$area" == "Changeling"}{
		#sub {^%*=X=(} {=X=Biome (};
		#sub {^+%*+%s} {};
		#sub {^|%*|%s} {};
		#sub {^ %s} {};
	};
};
	!rating;
}
#alias {mapoff}{

	#NOP !brief on yes;

	!brief on full;
	#map flag static on;
	#unvar mapstatic;
	#unvar mapping;
#nop Biome Work in progress;
	#NOP #unsub {^%*=X=(};
	#NOP #unsub {^+%*+%s};
	#NOP #unsub {^|%*|%s};
	#NOP #unsub {^ %s};

}
#map flag static on
#unvar mapstatic

#alias {ma} {#map set roomarea {$area}}

#alias {notelist} {
    #unvar notes;
    #if {"%1" != ""}{
        #map list {roomnote} {%i%*%0%*} {variable} {noterooms};
    }{
        #map list {roomnote} {{\w+}} {variable} {noterooms};
    };
   #foreach {*noterooms[]} {room} {
	   #map get {roomnote} {notes[$room][roomnote]} {$room};
	};
   	#var notes
}

#NOP Search Room Nouns (built by MIP)
#alias {sn} {
	#var noun_cnt &nouns[];
	#loop 1 &nouns[] cnt {
		#echo {<128>Examining: $nouns[$cnt]<088>};
		exa $nouns[$cnt];
		search $nouns[$cnt]
	};
	#delay 0.5 {
		#if {$noun_cnt < &nouns[]} {
			#echo {<128>New items found!  Search again!<088>}
		}
	}
}

#alias voidlink {
	#var dir %1;
	#var dest_num %2;
	#map link $dir $dest_num both;
	#map insert $dir void
}
/* Screen Sizing */
#event {SCREEN RESIZE} {
	#read .tt/3k/draw.tin
}

/* Allow clicking on a room to get map info */
#event {MAP SHORT-CLICKED MOUSE BUTTON ONE} {
    lfr {%0};
};
#alias lr {
    #if {"%1" == ""} {
        #map get;
    } {
        #if {%2 || %2 == 0} {
            #map jump %1 %2 %3;
            #map get;
            #map undo;
        } {
            #map at {%1} #map get;
        };
    };
};
#alias lfr {
    #if {"%1" == ""} {
        #map info;
    } {
        #if {%2 || %2 == 0} {
            #map jump %1 %2 %3;
            #map info;
            #map undo;
        } {
            #map at {%1} #map info;
        };
    };
};
/* Transports */
#nop { These rooms are all too specific.  may address later
	#NOP Abyss
	#NOP #act {Abyssmal Portal (s,portal)} {#map goto 5159} {1}

#NOP Android
#NOP #act {BING! The button light goes off and the elevator doors open.} {enter elevator}
#NOP #act {The elevator jerks to a halt and the doors open.} {out}
#NOP #act {The elevator is already here. How about you enter it?} {enter elevator}

	#NOP Ao
	#NOP #act {** The Docks of Ao ** (se)} {#map goto 15463} {1}

	#NOP Ascended
	#NOP #act {Arid environment (sw,n,s,e,climb)} {#map goto 16718} {1}

#NOP Ashridge Acres
#act {AREA NAME: Ashridge Acres} {
#NOP 	#map get {roomvnum} {ashridge_room};
 	#map goto 3741
} {4}

#act {^You cautiously enter the club.} {
	#map goto 4240
}

#NOP The Big Red Shoe
#act {^You put the shoe on your foot and find yourself transported!} {
	#map goto 3900
}


#NOP Calvin and Hobbes
#NOP #act {^on the snow calls to you, and you dread another day at school.} {#map goto 23824}
#NOP #act {^and eagerly await the freedom of the afternoon.} {#map goto 23814}

#NOP Chaos TV
	#NOP Chaos TV
	#act {AREA NAME: Simpsons [Doh]} {
		#if {"$area" != "Simpsons"} {
			#var {area} {Simpsons};
			#map get {roomvnum} {tvroom};
			#map goto 8315;
		}
	} {4}

	#act {AREA NAME: Simpsons Expansion [Lostar]} {
		#var {area} {Simpsons};
	} {4}

	#act {AREA NAME: Simpsons Expansion [Frank]} {
		#var {area} {Simpsons Expansion};
		#map get {roomvnum} {tvroom};
		#map goto 8227
	} {4}
	#act {^   You dive cleanly through the computer screen!} {
		#map goto $tvroom
	}

#act {^You let yourself go and feel the mist pull you into another reality.} {
	#map goto 4246
}

	#NOP Death
	#act {^You die.$} {#map goto 6247}

	#NOP Death Taco
	#act {^You shoot through a graceful arc, and feel weightless for the} {#map goto {roomnote} roaches}

	#NOP Dragon Realms
	#act {^You have to retreat against the onslaught of fire!} {#map move vortex}

	#NOP Einstein
	#act {^Standing on the bench, you relax and the stagedive through the rift} {#map goto 7039}

#NOP Erratio Forest
#act {^You squeeze your way into the Erratio forest.} {
	#map goto 3904
}
	#NOP Funkytown
	#act {^The intense gravity of the sun pulls the coaster to its surface where you} {#map goto 17497}

	#NOP Global Merc Training Theatre
	#act {^You have exited the simulation, thank you for playing.} {#map goto 15144}

	#NOP Good Humor Truck
#act {^You enter the truck with one thing on your mind... ICE CREAM!} {#map goto 3739}

#NOP Greenhouse
#act {^You embrace the plant and lose yourself among the vines.} {
#NOP 	#map get {roomvnum} {greenhouse_room};
 	#map goto 4030
}
#NOP #act {^You follow the trail away from the field.} {
#NOP 	#map goto $greenhouse_room
#NOP }

#NOP Illuminati Pyramid
#act {^You grab onto the edge of the pyramid and pull yourself up.} {
	#map goto 3885
}

#NOP Kareless Kanga's
#act {^You grab for the ticket and disappear.} {
	#map goto 3878
}

	#NOP Kayos Portal
	#act {^You leap into the unknown!} {
		#map get {roomvnum} {num};
		#if {$num == 10278} {
			#map goto $plungeroom
		} {
			#var plungeroom $num;
			#map goto 10278
		}
	}
	#act {^You touch the beacon, and a friendly ship belonging to The Vigilant swings by.} {#map goto 10278}

#NOP Lost City
#NOP #act {^With a final THUD, you fly out into a pile of metal!} {#map goto 24299}
#NOP #act {^With a bit of difficulty you make your way back up the shaft} {#map goto 24297}

#NOP The Land of Myths and Fables
#act {^flutters its wings, and throws a cloud of sparkling dust in your eyes!} {
	#map goto 4063
}
	#NOP Necromancers
	#act {^You tumble down the river and find yourself on a rocky bank inside} {#map goto 7613}

#NOP The Lost Village of Willothorn
#NOP #act {^You swim for your life for the surface and end up back where} {#map goto 14087}

#NOP The Magic Fungus
#act {^You gaze through the magnifying glass and see a tiny fungus...} {
	#map goto 3882
}

#act {^As you read the runes, you being to feel yourself being pulled} {
	#map goto 4251
}

#NOP Monkeytown
#act {^You squeeze the doll and hear a faint song... da-da-da-da-da... Monkeytown!} {
	#map goto 4050
}

#NOP Mud Puddle
#act {^You sink deep into the mud puddle!} {
	#map goto 3884
}

#NOP Necromancers
#NOP #act {^You tumble down the river and find yourself on a rocky bank inside} {#map goto 7613}

	#NOP Night of Colour
	#act {^The balloon softly touches down, basket bumps lightly.} {exit}
	#act {^You step out of the basket, into forest.} {
		#map get {roomarea} {area};
		#if {"$area" == "Night of Colour"} {
			#map goto 16359
		} {
			#map goto  16530
		}
	}
	#act {^You step out of the basket, into chaos.} {
		#map get {roomarea} {area};
		#if {"$area" == "Night of Colour"} {
			#map goto 16307
		} {
			#map goto 16527
		}
	}

	#NOP PG
#act {^You eat the hamburger and your environment changes!} {
#NOP 	#map get {roomvnum} {pg_room};
	 	#map goto 3743
}
#NOP #act {^As you exit the joint you seem to reappear back in CHAOS!} {
#NOP 	#map goto $pg_room
#NOP }

#NOP The Princess Bride
#NOP #act {^At last, the Cliffs of Insanity tower above you!} {#map goto 23763}
#NOP #act {^At last, the shore of Florin!} {#map goto 23737}


	#NOP Ravenloft Castle
	#act {^You warily step out onto the cold, damp ground.} {#map goto 20756}
	#act {^You then step out of the coach and find yourself back} {#map goto 4631}

	#NOP Sausage Dimensions
	#act {^The frankfurter SMACKS you so hard you wake up somewhere else!} {#map goto 17561}

	#NOP Science Shuttle
	#act {^The captain announces: Welcome to Midway Space Station.$} {exit}
	#act {^The captain announces: Welcome to Houston Transport Center.$} {exit2}

	#NOP Serinth
	#act {^The World of Serinth Board containing } {#map goto 16722}

	#NOP Sin City
#act {^You indulge yourself in the cake, becoming so entranced} {
	#map goto 3889
}

#NOP Spooky Pines
#act {^You pull out the flag.} {
	#map goto 3898
}

	#NOP Starcraft:Broodwar
	#act {^Door number: 3, Access Code: %1$} {#var starcraft_code %1}

	#NOP The Lost Village of Willothorn
	#act {^You swim for your life for the surface and end up back where} {#map goto 14087}

	#NOP Xaxis
	#act {^Welcome to Xaxis!} {#map goto 15875}
	#act {^Here we are folks. Welcome to the Isle of Equinity!} {#map goto 15913}

	#NOP Wandering Refrigerator
#act {^You open the huge refrigerator and step inside.} {
	#map goto 3880
}

	#NOP Wayhaven Ferry
	#act {^The ferryman says: Well, here you are.} {#map goto 7354}
};
#NOP The Zodiac
#act {^Cool!  It has your sign!} {#map goto 3741}
#NOP ** MARK SOMETHING GREEN **
#alias mark {#map set roomcolor <128>};

/* Blocked Exits */
#act {^You cannot go } {
	#if {$mapstatic} {
		#map undo
	}
}
#act {^You cannot get it up.} {
	#if {$mapstatic} {
		#map undo
	}
}

#NOP ** GUILDS **
#NOP Juggernauts
#act {^The room is locked.} {#map undo}
#act {^Dirk says: This area is for Wolves not } {#map undo}
#act {^Harlow says: You are not allowed here please turn around and leave at once} {#map undo}
#act {^Only members of clan jade falcon can go this way.} {#map undo}

#NOP Bards
#act {^You can't go there!} {#map undo}

#NOP ** AREAS **
#NOP Abbey
#act {^A feeling of fear and dread washes over you, preventing you from going} {#map undo}
#act {^A feeling of dread washes over you, preventing you from going any further east.} {#map undo}

#NOP Body Mansion
#act {^You bump into a locked door.} {#map undo}

#NOP Calvin and Hobbes
#act {^Calvin defends his fort!} {#map undo}
#act {^Hobbes will not let you into G.R.O.S.S. headquarters!} {#map undo}

#NOP Carnegie
#act {^Woody Allen says: You're going to have to wait for security!} {#map undo}
#act {^Mel Brooks blocks the exit.} {#map undo}
#act {^Jay-Z says: You're going to have to wait for security!} {#map undo}
#act {^Jay-Z says: Where do you think you're going?} {#map undo}
#act {^Jay-Z stops you leaving.} {#map undo}
#act {^Jay-Z blocks the exit.} {#map undo}
#act {^Trixie Hilton blocks the exit.} {#map undo}

#NOP Chaos Cinemaplex
#act {^The movie usher asks for your movie ticket. When you fail to come up with} {#map undo}

#NOP Cove of the Three (Lost Soul)
#act {^A magical force pushes you back, and you hear a voice} {#map undo}

#NOP Crystal Stairway
#act {^The Warrior will not let you invade her home any further.} {#map undo}
#act {^The warrior will not let you pass.} {#map undo}

#NOP Detroit
#act {^Officer yells: Get him, he must be stealing something!!!!} {#map undo}

#NOP Dundee
#act {^The foliage in this part of the swamp is extremely thick and will take} {#map undo}

#NOP Dragon Realms
#act {^You cannot get past the dragon guards.} {#map undo}

#NOP Fallout Shelter
#act {^Core Guard jumps in your way, blocking your path!} {#map undo}

#NOP Fantasy
#NOP #act {^You begin to climb up the dune but slip back down.} {#map undo}
#NOP #act {^The sand dunes are too steep in that direction.} {#map undo}

#NOP Ice Fishing
#act {^You are unable to climb the bank here.  It is very steep, and with all} {#map undo}
#act {^You can't go through a solid wall.  Try going around the shack, and} {#map undo}

#NOP Ice Mountains (Verbeeg)
#act {^The magical barrier is impenetrable.$} {#map undo}
#act {^The cryohydra snaps one of its heads at you as you try and approach} {#map undo}

#NOP Icyblue (Land of the Ice People)
#act {^You jump high!  But not high enough to reach the portal...}

#NOP Land
#act {^You are caught like a fly in a spider web, burning and twisting as} {#map undo}

#NOP Longshadow
#act {^The drawbridge is currently upright denying you access to the castle.} {#map undo}

#NOP Mage Tower
#act {^The guard blocks your passage.} {#map undo}

#NOP Night of Colour
#act {^Impediment slaps you back, thorns tearing.} {#map undo}
#act {^Serrated sword extended, Bulwark stops your progress.} {#map undo}

#NOP The Princess Bride
#act {^The guard won't allow you to pass!} {#map undo}

#NOP Pinnacle
#act {^Chavee says: Sorry, %1, but only members of the Crafter's Union are} {#map undo}
#act {^A magical force pushes you back.} {#map undo}

#NOP Rabbit Fields
#act {^The rabbit prevents you from going that way.} {#map undo}

#NOP Ravenloft
#act {^You try to go down, but suddenly feel more terrified than} {#map undo}
#act {^The trees move together and bar your path!} {#map undo}
#act {^A deathly chill blows from the south, blasting into} {#map undo}
#act {^Four dragons swoop down from the rafters and attack, blocking the way west!} {#map undo}

#NOP Rocky Hill
#act {^Waving their rusty scimitars and growling loudly, the jackalmen} {#map undo}

#NOP Simpsons
#act {^   The Guard stops you and says: Aww no...you can't go in there.} {#map undo}

#NOP SolChem
#act {^The gang member shoves you back.} {#map undo}

#NOP Tao Te Cheng
#act {^Your understanding fails you and you cannot flee!!} {#map undo}

#NOP Theatre of Souls
#act {^A closed door blocks your way.} {#map undo}

#NOP Underdark
#act {^The {drow|guard} prevents you from going that way.} {#map undo}
#act {^The troll will not let you pass.} {#map undo}

#NOP Whorehouse
#act {^Doh shoves you backwards with a scowl.} {#map undo}
#act {^Your feet are mired in the bird poop, you can't seem to move!!} {#map undo}

#class {mapper} {close}
