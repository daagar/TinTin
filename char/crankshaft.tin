#class {crankshaft} {kill}
#class {crankshaft} {open}

#var guild cyborg

#NOP Stepper settings
#var hardmode 0
#var bot_repeat 0

#var have_corpse 0
#var last_round 0

#act {{HP: (\d+)\[(\d+)\]\((\d+)\) PWR: (\d+)\[(\d+)\]\(([\d\-]+)\) HT: \[(\d+)\%\] SI: \[([\d\.]+)\%\]}} {
    #var my[hp][current]	%2;
    #var my[hp][max]	%3;
    #var my[hp][delta]	%4;
    #var my[gp1][current]	%5;
    #var my[gp1][max]	%6;
    #var my[gp1][delta]	%7;
    #var my[gp2][current]	%8;
    #var gxp		%9;
    #format {glvl} {%d} {$gxp};
    #math {gxp_per} {($gxp-$glvl)*100};
    update_status;
}

#act {{C: \[([\d\.]+)(\w)\] TARG: (\d+)\%}} {
    #var credits	%2%3;
    #var enemy[hp]	%4;
    
}

#alias {update_status} {
    
    #if {$my[gp1][current] > $my[gp1][max] * .95 && $my[gp2][current] < 3 && $my[hp][current] == $my[hp][max] && $resumebot} {
        #echo {RESUME - Safe levels reached};
        #unvar resumebot;
        .resume;
    };
    
    #if {$my[gp1][current] < $my[gp1][max] * .3} {
        #delay {handle_corpse} {
            #if {$corpses[cooler] > 0} {
                uncooler corpse;
                #var have_corpse 1;
            }; #elseif {$corpses[inventory] > 0} {
                drop corpse;
                #var have_corpse 1;
            }; #elseif {$corpses[freezer] > 0} {
                deslab;
                #var have_corpse 1;
            }; #elseif {$corpses[coffin] > 0} {
                unwrap;
                #var have_corpse 1;
            };

        
            #if {$have_corpse} {
                decompose;
                #var have_corpse 0; 
            };
        } {0.5};



    };

    #if {"$cooler" == "on" || $corpses[cooler] > 0} {
        #format {sb1_cooler} {%+2s} {$corpses[cooler]};
        #var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
    } {
        #var {sb1_cooler} {}
    };

    #if {"$freezer" == "on" || $corpses[freezer] > 0} {
        #format {sb2_freezer} {%+2s} {$corpses[freezer]};
        #var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
    } {
        #var {sb2_freezer} {}
    };

    #var {my[hp][graph]}    {@graph{$my[hp][current];${my[hp][max]}}};
    #var {my[gp1][graph]}   {@graph{$my[gp1][current];$my[gp1][max]}};
    #var {my[gp2][graph]}   {@graph{$my[gp2][current];$my[gp2][max]}};
    #var {gxp_graph}        {@graph{$gxp_per;100}};
    #var {enemy[graph]}     {@graph{$enemy[hp];100}};
    #format {hp}            {%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
    #format {hp_max}        {%+4s} {<128>$my[hp][max]<088>};
    #format {gp1}           {%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
    #format {gp1_max}	{%+4s} {<128>$my[gp1][max]<088>};
    #format {gp2}           {%+3s} {@colscale{$my[gp2][current];$my[gp2][max]}};
    #format {ehealth}       {%+6s} {@colscale{$enemy[hp];100}};
    #format {gxp_col}       {%+7s} {@colscale{$gxp;100}};
    #format {corpses[inventory]}     {%+2s} {$corpses[inventory]};
    #format {corpses[coffin]}  {%+2s} {$corpses[coffin]};
    #format {corpses[freezer]} {%+2s} {$corpses[freezer]};
    #showme {<088>HP:$hp/$hp_max PR:$gp1/$gp1_max HT:   $gp2\%    E:$ehealth\%    IC:<130>${corpses[inventory]}<088> ${sb1_cooler}} {-4};
    #showme {H:${my[hp][graph]} P:${my[gp1][graph]} HT:${my[gp2][graph]} E:${enemy[graph]} CF:<130>${corpses[coffin]}<088>${sb2_freezer}} {-3};
    #showme {$mip[gline][1]  $mip[gline][2]  RND: $mip[round]($last_round)} {-6}
}

#alias {corpsetrig} {
    #var last_round $mip[round];

    #if {$my[hp][current] < $my[hp][max] * .80} {
        !reconstruct;
        #NOP !decompose;
        !get coins from corpse;
        !wrap;
    }{
        #NOP !decompose;
        !get coins from corpse;
        !wrap
    };
    
    

    #if {$bot} {
        #if {$my[hp][current] < $my[hp][max] * .90} {
            #echo {STOPPING - Health threshold reached};
            .stop;
            #var resumebot 1;
        };

        #if {$my[gp1][current] < $my[gp1][max] * .4} {
            #echo {STOPPING - Power threshold reached};
            .stop;
            #var resumebot 1;
        };

        #if {$my[gp2][current] > 50} {
            #echo {STOPPING - Heat limit reached};
            .stop;
            #var resumebot 1;
        };
    };

}

#act {dealt the killing blow} {corpsetrig}

#act {^The coffin is full!} {
    #if {$bot} {
        .stop;
        go morgue;
        donate coffin;
        #var resumebot 1;
    }
}


#class {crankshaft} {close}
